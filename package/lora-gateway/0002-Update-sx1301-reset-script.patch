From db5ea979211171ddc2fc00a042a56b2fce04d768 Mon Sep 17 00:00:00 2001
From: abelino <abelino.romo@gmail.com>
Date: Thu, 30 Jun 2022 18:39:55 -0700
Subject: [PATCH 2/2] Update sx1301 reset script

---
 reset_lgw.sh | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/reset_lgw.sh b/reset_lgw.sh
index 77de63e..4d4246b 100755
--- a/reset_lgw.sh
+++ b/reset_lgw.sh
@@ -2,16 +2,16 @@
 
 # This script is intended to be used on IoT Starter Kit platform, it performs
 # the following actions:
-#       - export/unpexort GPIO7 used to reset the SX1301 chip
+#       - export/unpexort GPIO17 used to reset the SX1301 chip
 #
 # Usage examples:
 #       ./reset_lgw.sh stop
 #       ./reset_lgw.sh start
 
-# The reset pin of SX1301 is wired with RPi GPIO7
+# The reset pin of SX1301 is wired with RPi GPIO17
 # If used on another platform, the GPIO number can be given as parameter.
 if [ -z "$2" ]; then 
-    IOT_SK_SX1301_RESET_PIN=7
+    IOT_SK_SX1301_RESET_PIN=17
 else
     IOT_SK_SX1301_RESET_PIN=$2
 fi
@@ -19,26 +19,26 @@ fi
 echo "Accessing concentrator reset pin through GPIO$IOT_SK_SX1301_RESET_PIN..."
 
 WAIT_GPIO() {
-    sleep 0.1
+    usleep 100000
 }
 
 iot_sk_init() {
-    # setup GPIO 7
+    # setup GPIO17
     echo "$IOT_SK_SX1301_RESET_PIN" > /sys/class/gpio/export; WAIT_GPIO
 
-    # set GPIO 7 as output
+    # set GPIO17 as output
     echo "out" > /sys/class/gpio/gpio$IOT_SK_SX1301_RESET_PIN/direction; WAIT_GPIO
 
     # write output for SX1301 reset
     echo "1" > /sys/class/gpio/gpio$IOT_SK_SX1301_RESET_PIN/value; WAIT_GPIO
     echo "0" > /sys/class/gpio/gpio$IOT_SK_SX1301_RESET_PIN/value; WAIT_GPIO
 
-    # set GPIO 7 as input
+    # set GPIO17 as input
     echo "in" > /sys/class/gpio/gpio$IOT_SK_SX1301_RESET_PIN/direction; WAIT_GPIO
 }
 
 iot_sk_term() {
-    # cleanup GPIO 7
+    # cleanup GPIO17
     if [ -d /sys/class/gpio/gpio$IOT_SK_SX1301_RESET_PIN ]
     then
         echo "$IOT_SK_SX1301_RESET_PIN" > /sys/class/gpio/unexport; WAIT_GPIO
-- 
2.36.1

